,ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
0,90243,comment,90097.0,90150.0,0,0,pius,,,I don't believe any of this hogwash . . . SimpleDB is clearly just a big memory-resident hash table.,1197867486.0
1,90242,comment,89603.0,89744.0,0,0,michaelneale,,,Brilliant.,1197867077.0
2,90241,comment,90189.0,90229.0,0,0,amichail,,,1) because I think I will get more users that way<p>2) yes I agree,1197867065.0
3,90240,story,,,2,0,reitzensteinm,Loren Feldman Trashes Seesmic,http://www.techcrunch.com/2007/12/16/loren-feldman-trashes-seesmic-founder-loic-le-meur-takes-the-bait/,,1197867061.0
4,90239,comment,90231.0,90238.0,0,0,ingenium,,,Yeah....even though those unmentioned substances ARE the best at coding enhancement.,1197866319.0
5,90238,comment,90231.0,90231.0,0,0,rms,,,"By popular demand, I will resist the urge to shill other code enhancing substances.",1197866157.0
6,90237,comment,90061.0,90061.0,0,0,Goladus,,,"I really don't know what to think.  On the one hand, that video killed a bunch of my brain cells and I don't care what happens to it; on the other hand I hope the plaintiff loses for the sake of copyright.",1197866072.0
7,90236,comment,90094.0,90094.0,0,0,skmurphy,,,"For me the opportunity is for an app that would allow a small group (e.g. of founders) to create an integrated view of their contacts: answer the question who knows someone at X? But I agree with gnaritas that turning over the keys to your on-line identity was too big a step for me. Which argues, I guess for a distributed model that could share results.",1197865829.0
8,90234,story,,,1,0,hhm,"Machine Learning (classic book, by Tom Mitchell)",http://books.google.com/books?id=I5GcpyPx3RwC&pg=PP1&dq=Machine+Learning+mitchell&ei=W_llR4_1CZT8iwHjnuGZAw&sig=ebvFIPOnCSNGlxL0Vb2TFuoFt1A,,
9,90233,comment,90222.0,90222.0,0,0,tlrobinson,,,"<i>""On the other hand, it's also possible that they could shop the combination around to other sites as their own answer to Passport and OpenID - a universal web identity backed by a trusted brand.""</i><p>[Sigh]<p>A universal web identity should <i>not</i> be ""backed"" by any particular brand. That's precisely the strength of OpenID (and <i>not</i> \nMS Passport). You're free to use any OpenID provider which <i>you trust</i> (including <i>yourself</i>), but you aren't <i>required</i> to use anyone in particular, like this guy suggests Google could/should do.<p>For example, I recently set up my personal website URL to be my OpenID (very easy: two additional <link> tags), which currently delegates to an account I registered with the myopenid.com provider, but I could easily change it at any time to another provider if I found another better provider that I trusted more (or even myself using something like <a href=""http://siege.org/projects/phpMyID/"" rel=""nofollow"">http://siege.org/projects/phpMyID/</a>)<p>Now, if Google wanted to be an OpenID provider (like AOL, LiveJournal, Technorati, WordPress, and others have done) I would be all for that. What we <i>don't</i> need is some proprietary system.<p>I suggest anyone developing a web app look into supporting OpenID authentication. It's not too much additional work, and it would make the web a better place if it were widely deployed. Plaxo has detailed instructions on converting existing web apps to support OpenID: <a href=""http://www.plaxo.com/api/openid_recipe"" rel=""nofollow"">http://www.plaxo.com/api/openid_recipe</a><p>And for the rest of you, you should set up an OpenID and start using it wherever possible. Sam Ruby has good instructions on using your URL as an OpenID <a href=""http://www.intertwingly.net/blog/2007/01/03/OpenID-for-non-SuperUsers"" rel=""nofollow"">http://www.intertwingly.net/blog/2007/01/03/OpenID-for-non-S...</a> or OpenID.net has information on getting an OpenID from any number of providers: <a href=""http://openid.net/get/"" rel=""nofollow"">http://openid.net/get/</a>",1197865135.0
10,90232,story,,,1,0,nickb,"Online Ad Spending Growth To Slow, No Need To Panic",http://www.techcrunch.com/2007/12/12/online-ad-spending-growth-to-slow-no-need-to-panic/,,1197865115.0
11,90231,story,,,12,7,pius,"""I'm guilty of using code enhancing substances.""",http://www.scartech.net/2007/12/14/c8-h10-n4-o2/,,1197864407.0
12,90230,comment,90156.0,90156.0,0,0,mhartl,,,"Python was the first language I ever loved.  And I've defended it, and especially its whitespace for block structure, more times than I can count.  (One Perl programmer I know can't mention Python without describing it as ""that whitespace language"", and I couldn't understand why until I saw some of his, ahem, ""creatively indented"" Perl code.  I'm so anal about indentation that I really never noticed.)<p>But eventually I realized that whitespace is an Achilles heel in one context: using Python as an HTML-embedded template language---unfortunately, a very important case.  Seeing this Django book, and finally understanding how they solved the template-language problem with Python, appears to confirm this intuition.  They solve it the same way all Python frameworks solve it: they introduce a separate, template-specific language.<p>This is one big reason why I love Ruby, and Rails.  Because Ruby uses an ""end"" keyword, it works great as an HTML-embedded language.  This means that, in Rails, you <i>always</i> have a full-strength language at your disposal, and never have to use a watered-down template language. <p>It's possible that Django is awesome nonetheless---it does seem to be attracting some first-rate hackers---and I could certainly be convinced to switch, but being able to use embedded Ruby will keep me firmly in the Rails camp for the time being.",1197864248.0
