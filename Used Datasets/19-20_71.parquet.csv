,ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
0,942052,comment,941843.0,941938.0,0,0,mahmud,,,"Unsubstantiated claims. Common Lisp has been embedded inside Quake II:<p><a href=""http://ecls.sourceforge.net/ecl-in-quake2.jpg"" rel=""nofollow"">http://ecls.sourceforge.net/ecl-in-quake2.jpg</a><p>That takes care of the graphics, networking, matrix manipulation and low-latency. What other FUD do you need answered?",1258228757.0
1,942051,comment,941843.0,941978.0,0,0,stefano,,,Probably Microsoft's F,
2,942050,comment,941807.0,941807.0,0,0,ianbishop,,,"When you click on the ? next to qualifications to become a tutor, it shows a wad of lorem ipsum in the notification.<p>Oh and please don't display bids publicly to Tutors that have already been answered (still have it show up for Tutor who answered) or timed out.",1258228724.0
3,942049,comment,942019.0,942019.0,0,0,Aegean,,,I wouldn't track my time with it because the time I have the editor open is the trivial period of time when I reflect all that I have designed into code.,1258228527.0
4,942048,comment,941807.0,941807.0,0,0,drewcrawford,,,"1.  I'd really like to see some copy.  A nice 1-2-3 big and bold where I can see it.<p>2.  Your sort/search isn't well thought through.  Ideally I'm looking for high-dollar questions, in either CS or mathematics (fields in which I am knowledgeable), that need answers.  I can sort by cost, (ascending cost is first? wtf?) but I get a lot of ""deadline expired"" questions.  If I sort by ""deadline"", I lose the cost sort, which isn't what I want.  I can filter by one field at a time, but not, say, the union of CS and math.  As an answerer, seeing questions that already have answers or that the deadline has expired is totally worthless to me.  People wanting answers to a specific question will probably come through Google anyway, rather than searching your site directly.<p>3.  After looking for answered questions to get a feel, the first ""answered"" one i found was this: <a href=""http://www.studylance.com/question/pos355-introduction-to-operating-systems"" rel=""nofollow"">http://www.studylance.com/question/pos355-introduction-to-op...</a> Seriously?  There's no question and no answer.<p>4.  After failing to find a truly ""answered"" question, I'm mystified as to how the site works.  I see references to ""bids"", yet it appears that the question-askers name their prices.  Is this an auction format, or a price-as-listed format?  Also, see ",
5,942047,comment,941862.0,941862.0,0,0,rufo,,,"There's an interesting point made, but I'm not sure that I really like the direction Leah went in. To me, the fields stand out far more than the radio buttons, I stop reading the header after ""Log in..."" (what more do I need to know, it's a login form) and I really wouldn't notice that it's a sign-up form unless I look carefully - I had to look twice before I realized there was even a difference between the two screenshots.<p>I'd probably ditch the radio buttons and make the header more eyecatching, with ""Join Now?"" clearly a link. Clicking it changes the form in the way Leah shows, probably with a quick Javascript fade so the user notices.",1258228491.0
6,942046,comment,941843.0,941951.0,0,0,mnemonicsloth,,,"<i>ML and Haskell have surpassed them in all respects.</i><p>I must have missed the memo explaining why static typing is always better.  Can you forward it to me?<p><i>Lisp [is] stuck in the past...</i><p>You lose a little credibility here for not specifying which lisp you mean.  I'll assume you mean Common Lisp because:<p>- Scheme is in the middle of reinventing itself after the R6RS unpleasantness, and that process could have any number of interesting repercussions.<p>- Clojure is very young, and already has a good chance of becoming the first mainstream functional programming language.  I'll leave the value of that distinction unspecified for now, but it would be <i>interesting</i>.<p>- Some of the features available to Common Lisp programmers in the past really are impossible to duplicate today, and will probably remain so for the forseeable future.  By all accounts, the system-level introspection and debugging capabilities available on Lisp Machines were a real treat to operate.  We can reasonably disagree about how useful it might be to have OS, toolchain, editor, and system software all written in the same language and presenting a uniform interface, but I don't see how anyone could claim that ML and Haskell have surpassed Lisp on this point.",1258228478.0
7,942045,comment,941740.0,941740.0,0,0,justinhj,,,"""Ugh, look at all that syntax.""<p>As a common lisp programmer it's sad to see somebody do to another language what people do to CL. One superficial glance at the syntax and write it off, without further criticism.<p>""Lisp has a lot of brackets, LOL""",1258228474.0
8,942044,comment,941699.0,941780.0,0,0,patio11,,,"<i>It's much harder to flamboyantly show off a virtual good, except in a virtual setting</i><p>While it doesn't take a degree from Harvard to ostentatiously flaunt virtual goods, I have noted that they sure seem to do it well.  (I often tell people that I have two pieces of paper which cost $140,000 but, of course, it didn't cost $140,000 for the paper.  It cost $140,000 to <i>be able to say</i> I have the paper.)",1258228471.0
9,942043,story,,,5,1,rglullis,The Pied Piper of Mucus,http://www.popsci.com/bown/2009/innovator/pied-piper-mucus,,1258228458.0
10,942041,comment,942019.0,942029.0,0,0,abugosh,,,"I use org-mode for doing this type of time tracking and... Well. Tracking just about everything else too.<p><a href=""http://doc.norang.ca/org-mode.html"" rel=""nofollow"">http://doc.norang.ca/org-mode.html</a> provides a real good guide to org-mode and using the time tracking functionality.",1258228454.0
11,942040,comment,941740.0,942015.0,0,0,mahmud,,,"Google ""cliki"" and ""lisp success stories"" in the future.<p><a href=""http://maxima.sourceforge.net/screenshots.html"" rel=""nofollow"">http://maxima.sourceforge.net/screenshots.html</a><p><a href=""http://www.izware.com/mirai/index.htm"" rel=""nofollow"">http://www.izware.com/mirai/index.htm</a>",1258228430.0
12,942039,story,,,2,0,prakash," Google, Kosmix, and The Deep Web â€“ A Love Triangle",http://blog.kosmix.com/uncategorized/google-kosmix-and-the-deep-web-a-love-triangle/,,1258228415.0
13,942038,comment,941843.0,941953.0,0,0,ekiru,,,"> There is value in static checking for some things, but it is also limiting.<p>Other than type-safe heterogenous lists(which is only true if you hold static type systems to a much higher standard of type-safety than dynamic type systems), what sorts of things do a type system with type classes, algebraic data types, and higher order functions prevent doing?<p>> Lisps can and do have powerful type systems - you're confusing dynamic with none at all.<p>Common Lisp has a powerful object system and dispatch scheme, but it isn't as powerful as Haskell's type system. Type classes provide compile-time multi-methods which can be every bit as dynamic as CLOS's when needed, but which are statically checked as much as is possible. In addition, type classes make it possible to dispatch not just on argument type but also on return type. How do you write a Common Lisp function which polymorphicly converts an integer to whatever type you need? This is admittedly a bit of a weak example, but polymorphic conversions like this can probably be useful(for example, you could use it to implement a somewhat inefficient heterogenous list).<p>In Haskell(I'm not very familiar with Haskell, but my testing indicates that this would work):\n  class FromInt t where\n    fromInt :: Integer -> t<p>Haskell also has parameterized types, which aren't as needed in dynamic type systems, but that relative lack of need is only because a dynamic type systems considers a program that calls a method which doesn't work on an object's type at runtime to be type-safe.<p>In a statically typed language with type classes and sufficiently powerful syntactic macros, it would be possible to conveniently defer to dynamic type checking in way that would type-check statically. The macros are only necessary for the convenience part. Otherwise, you'd have to create a lot of type classes for every type you wanted to use dynamically. With macros, you could just include the creation of the appropriate classes in the form that defines a new type. In fact, it could be built into the language making even macros unnecessary.",1258228352.0
14,942037,comment,941862.0,941862.0,0,0,zck,,,"Especially in this case, when you don't ask for an email, it seems like a mistake to only get the password once. If someone mistypes it, there's no way to get them access to their account again.<p>And yes, I'm aware HN has this problem, unless you go in and put your email in your profile.",1258228321.0
15,942036,comment,941772.0,941982.0,0,0,iujhgfvvgbhnj,,,"The title suggests peak energy demand, in fact it achieved it at minimum energy demand (early hours of Sunday morning)<p>It's like an airport saying that all it's flights were on time at peak - then saying that they didn't mean thanksgiving, they meant that on sunay morning they peaked by getting both flights out on time.",1258228283.0
16,942035,comment,941628.0,941628.0,0,0,tsally,,,These have been out for a while and they are free on iTunes.,1258228189.0
17,942034,comment,940605.0,940984.0,0,0,racerrick,,,"How is it a scam?  If you're going to visit Tortola - there's basically no information about how to get there anywhere.  I list the top places to stay, eat, and beaches.  I list all of the ferry services between there and st thomas.<p>It's better than registering domains with names of big companies - now that's a scam.",1258228095.0
18,942033,comment,941862.0,941960.0,0,0,teej,,,"If an existing user misspells their username, being taken to a register screen is not where they want to go.",1258228055.0
19,942032,comment,941906.0,941906.0,0,0,ethan,,,"Komodo Edit: <a href=""http://www.activestate.com/komodo_edit/"" rel=""nofollow"">http://www.activestate.com/komodo_edit/</a>",1258228052.0
20,942031,comment,941922.0,942007.0,0,0,rsaarelm,,,"The idea is pretty much spaced repetition learning (<a href=""http://en.wikipedia.org/wiki/Spaced_repetition"" rel=""nofollow"">http://en.wikipedia.org/wiki/Spaced_repetition</a>), even though article doesn't call it that or make any references to the existing work.",1258228029.0
21,942030,comment,941739.0,941739.0,0,0,camccann,,,"Okay, here's the fun bit: Having a nearby grandmother consistently increased or <i>decreased</i> a child's chances of surviving vs. not having a grandmother around, in proportion to the expected number of shared X chromosomes.<p>From the article: <i>In other words, the effect of a grandmother perfectly tracked the DNA. ""The higher the X-relatedness,"" the scientists write in Proceedings of the Royal Society B, ""the more beneficial effect the grandmother has on that child's"" survival. That the correlation held across four continents and four centuries suggests a biological, not cultural, explanation.</i><p>Putting this in more specific personal terms, if you're male, <i>your mother has a biological instinct to harm the future success of your sons</i>, even if she is not only unaware of it but aghast at the entire idea.<p>So, anyone still think that genes don't have much effect on behavior?",1258228013.0
22,942029,comment,942019.0,942019.0,0,0,jcapote,,,org-mode for emacs has a timer you could use for this purpose.,1258227973.0
23,942028,comment,941397.0,941971.0,0,0,coconutrandom,,,"We prefer, 'enthusiasts'.",1258227960.0
24,942027,comment,941961.0,941961.0,0,0,petewarden,,,"Here's the original Wikipedia article:\n<a href=""http://en.wikipedia.org/wiki/Walter_Sedlmayr"" rel=""nofollow"">http://en.wikipedia.org/wiki/Walter_Sedlmayr</a><p>The murderers' names are Manfred Lauber and Wolfgang WerlÃ©. Let's hear it for the Streisand Effect.",1258227822.0
25,942026,comment,941772.0,941772.0,0,0,sketerpot,,,"And most of the time, it has much lower wind production, and they make up the difference by burning a lot of natural gas. This sort of thing is why the natural gas companies like wind so much.",1258227791.0
26,942025,comment,941892.0,941892.0,0,0,dennykmiu,,,"A very short and very instructional video, from someone who has been in the trenches.<p>My own experience is that most entrepreneurs do not understand is that building startups is not just about building products and features but about mitigating risks for your customers. Until you can successfully do that, no one can put their career and their families at risk by buying your products.<p>So the best way is to get all your co-Founders and early employees together and have them focused on what it takes to best serve your customers. When you can do that then you will find that customers do expect a CEO and a bunch of VP's because their managers (who must approve the purchase) expect the same. So this is about helping your customers who are becoming your champion within their organization.<p>But the trick is to make sure that everyone on your team knows that their titles and positions are only temporary (including the CEO) and their job is to build the company to the point when they can find their own replacement.",1258227782.0
27,942023,comment,942019.0,942019.0,0,0,pg,,,Etherpad might be close.,1258227698.0
28,942022,comment,941906.0,941906.0,0,0,ronnier,,,"Combinations of Visual Studio, Notepad++, Team Foundation Server, Subversion, and FileZilla (all depending on which project I'm doing).",1258227674.0
29,942021,comment,942019.0,942019.0,0,0,daleharvey,,,"rescuetime is quite good for that type of thing, last time I used it it didnt quite have project integration but it was working on it<p>annoyingly for me it sucks on linux though",1258227631.0
30,942020,comment,941922.0,941922.0,0,0,rsaarelm,,,"I write down things I want to remember later in Emacs org-mode files. It would be easy to set this up with org's SCHEDULED marker.<p>Just make a macro to emit a bunch of SCHEDULED markers for suitably spaced future dates, run it on new items, and review the items when they come up in the agenda in the future.",1258227579.0
31,942019,story,,,12,18,jmonegro,Tell HN: Idea: Time-tracking Code Editor,,"I'm building a little app, and whenever I'm doing this kind of stuff, I like to know how long it took me to develop it - not days, but work hours.<p>At first I thought I'd use one of the online time trackers, but the problem is that I might forget to hit the ""stop"" button whenever I'm not coding. It would be useful to have a code editor or a plugin to an existing one that records the time you were actually working. And, when you stop using the application, or minimize it, it stops counting.<p>Granted, there are a few flaws. For instance, if I momentarily go StackOverflow to ask a question relative to my project, some might want to include that into their dev time. However, this wouldn't be recorded in the timer if the editor is closed or minimized.<p>I was wondering what HN thought of this idea, and if someone might want to develop it further :) I'm afraid I'm not much of a desktop programmer, at least not to the level of writing a code editor.",1258227527.0
32,942018,comment,941807.0,941807.0,0,0,babyshake,,,"Post Your Question.<p>What kind of question? Can I ask how to get rid of my cat's fleas?<p>The title of the site makes it somewhat obvious, but you should make it even more obvious in your call to action.<p>Also, I can see that you're using jQuery. I'm curious what you're running on the server.",1258227484.0
33,942017,comment,941740.0,941845.0,0,0,mjgoins,,,"Are you slamming the people of the island state of Java, or the programming language, or both?",1258227408.0
34,942016,story,,,1,0,jassi,Get Google Wave Free Invites,http://savedelete.com/get-google-wave-free-invites.html,,1258227396.0
35,942015,comment,941740.0,941988.0,0,0,maelstrom,,,"There should at least be one canonical example.  I'm not claiming to know everything, I'm trying to fill in my knowledge.  If lisp is so great, and so much more productive, and used by the greatest programmers on Earth, point me to some great code so I can become more informed.<p>Should I start reading EMACS source? Show me the code!  If there's not at least one great open source project written in lisp, I'm not inclined to take your claims prima facie.",1258227341.0
36,942014,comment,941843.0,941891.0,0,0,jerf,,,"I think Lisp's philosophy, as explained by Paul Graham (perhaps you've heard of him :) ), is to enable the programmer to do anything they put their mind to. When choosing whether to do the powerful thing or the simpler thing, they will choose the thing that gives the programmers more power, and point out (not entirely incorrectly) that they can wrap up simpler versions for simpler cases with macros.<p>As a skilled developer, I certainly prefer this philosophy to the Java philosophy of ""If the feature might be abused, leave it out."" (Obviously, I simplify that, but there's a lot of truth there.) But I don't think it's the right way to think of languages as we go forth, and I don't think it can scale as we go forward.<p>Instead of seeing languages in terms of what they permit, I see them in terms of what they deny. In particular, what invariants do they maintain? Now, that might seem an odd way of looking at it, but what it is is support for the next question: What do languages <i>build</i> on top of this invariant?<p>All the languages that I am currently interested in, and all the ones that I think provide the way forward, maintain invariants that Lisp does not let you maintain, precisely <i>because</i> it gives the Lisp programmer too much power. One obvious example: You can't ""mutable lisp"" your way into a language that has immutable variables <i>all the time</i>. If the language provides for mutation, even if you program in a strictly immutable subset of the language, your libraries, including your very base libraries that make up the ""runtime"", are likely to be mutation-based. (Getting around this might be possible but hardly worth it.) Erlang builds a huge runtime around having such pervasive immutability, and while mutable Lisps can borrow large swathes of Erlang's libraries and capabilities, they are incapable of providing a guarantee at the language level that no function you ever call will mutate a value out from underneath you. Erlang is a great example of building on quite a few invariants (read ""programmer limitations"") and producing things that are harder and/or impossible without them.<p>Another example: Type system. Lisp certainly lets you layer type systems on top of your language, but without enforcement by the language, there's a barrier as to how much you can take advantage of it. What the ML family does with types is not something you can add to a Lisp and end up with the same thing you get with native language support. You can come close, but there's a final level of integration or loop-closing (don't have a clean word for this concept) that you can not get to.<p>Smaller example: Haskell's laziness. You can add laziness constructs to a strict language (see also: Python generators), but you can not macro your way to a fully-lazy language starting with a strict one, at least not in any reasonable manner. (This feature excites me much less, but it's another example of something you have to start with.)<p>When the entire philosophy is about empowerment, you close the doors to a lot of things that can only be obtained by carefully-selected <i>dis</i>empowerment of the programmer, most of which are fringe right now, but which I think will become more important over the future. Truly ultimate power only comes from assembler; languages give you their power by restricting the assembler they can generate.<p>In the single programmer case, especially the mature single programmer case, ""more power"" may be a great thing, but I think it breaks down pretty quickly as you get more people involved, especially as you get less-than-experts involved, and I think a lot of Lisp's failures to take over the world come from this basic issue, and some second-order effects.<p>What I want to close with is something I already said: Certainly, if I had to choose between a conventional Java-style B&D language or Lisp, I'd take Lisp. But the interesting action is occurring in the fields dominated by constraining the programmer: parallel programming developments, STM, immutability and/or banning shared memory, and potentially other interesting things that all involve first taking things from programmers, then building on the resulting invariants that things like Lisp or Perl or Ruby make a big point of <i>not</i> constraining you with. (I'm interested in type-safe string manipulations to ban XSS at the type level, for instance.) There are Lisps doing those things, but notice precisely that they have to be built in at the language level; you can't just macro your way to Clojure's STM. (And if that does happen to be how it is implemented, I'd run screaming; STM isn't very useful unless it is a <i>very</i> strong guarantee. And any connection with other JVM libraries will be very hard, too.)",1258227254.0
37,942013,comment,941922.0,941996.0,0,0,DenisM,,,"Making an intuitive app would be half the problem. The other half is finding enough customers to pay for it - there is no obvious way to segment and/or target users, other that a single life-hacker post that you're going to get.",1258227249.0
38,942012,comment,941740.0,941740.0,0,0,caffeine,,,"Go just strikes me as profoundly boring.<p>""Uh, we do lots of C.  Yeah, and lots of Python.  Dude.  Let's make a language that's like, uh ... C <i>and</i> Python! Yes! Awesome.""<p>In a world where the only thing harder than Haskell is Google's interview questions, you'd think they would've come up with something more original.",1258227147.0
39,942011,comment,941906.0,941997.0,0,0,aarongough,,,"I'll admit that I never actually use the CSS editor... I'm very comfortable writing my CSS by hand so I continue to do it like I always have.<p>As far as Coda vs Emacs... I think that's like anything else. I can replicate all of the functionality of Coda using GEdit + plugins on Ubuntu but it doesn't have the same feel of a beautiful, coherent, whole. I've never gotten into vim/emacs in particular as I'm a bit of a fan of nice GUIs.",1258227126.0
40,942010,comment,941740.0,941883.0,0,0,mjgoins,,,news.ycombinator.com is written in a new lisp dialect.,1258227015.0
41,942009,comment,941906.0,941906.0,0,0,joe_bleau,,,"Codewright, rysnc, cvs.",1258226954.0
42,942008,comment,941862.0,941960.0,0,0,camccann,,,"This sort of approach will leak information about what usernames exist in the system, which has security implications.<p>Depending on the nature of the application you may or may not need to worry about this (e.g., obviously irrelevant if the site has a user list that shows the login names).",1258226937.0
43,942007,comment,941922.0,941922.0,0,0,drp,,,I don't see a single mention of long term memory in this article.  Cognitive psychology is not a grab bag to use for marketing.,1258226875.0
44,942006,comment,941740.0,941740.0,0,0,alrex021,,,"IMHO, he is not a snob. Realist would be a more\napropriate term.<p>Just my 2c.<p>-lisp guy",1258226857.0
45,942005,comment,941862.0,941970.0,0,0,BerislavLopac,,,"As should all of them, really...",1258226687.0
46,942004,comment,941350.0,941724.0,0,0,gruseom,,,"<i>Loops, subroutines, and I believe dynamic allocation all came from ALGOL.</i><p>The initial release of Fortran had loops and subroutines. But I don't think even they invented those things.<p>I'm not sure about dynamic allocation.",1258226600.0
47,942002,comment,941606.0,941818.0,0,0,nearestneighbor,,,"I don't know about Japan, but in America, you can register a company and keep it ""afloat"" for as long as you like, even if it doesn't do anything.",1258226535.0
48,942001,story,,,1,1,Fljotavik,Finding an OSS project to contribute to (H.S. Edition),,"Hello. I am a junior in High School and I'm looking for advice on how to get into open source contribution.\nI am skilled in the following languages (ordered from high to low proficiency): Java, Python, Perl, HTML/CSS (I know this isn't a REAL langauge), C. I've tried joining some\nprojects in the past, but they have either fallen apart, already had too many active contributors, or had a \ncodebase that was too deep and complex for me to understand. I'd be grateful for any suggestions the HN community could offer me.",1258226528.0
49,942000,story,,,1,0,RiderOfGiraffes,Switzerland takes Google to court,http://news.bbc.co.uk/1/hi/business/8358908.stm,,1258226526.0
50,941999,comment,941740.0,941740.0,0,0,johnbender,,,"""Sigh. (Programming language quality is usually inversely proportional to the number of special forms.)""<p>I tend to agree with this, and I'm not a lisp fanatic.",1258226520.0
51,941998,comment,941944.0,941944.0,0,0,makmanalp,,,The funny part is that they could probably sue you for preventing their wiretap on you.,1258226481.0
52,941997,comment,941906.0,941952.0,0,0,tptacek,,,"I liked Coda, but I had the same problem with it that I have with pretty much every specialty editor on the Mac: once you've got your Emacs groove worked out, there's very little you can do to create a <i>serious</i> value-add. I didn't find Coda so much better than the tools I already had to make it worthwhile.<p>I'm also not a huge fan of the Coda CSS editor, although modern browsers are quickly obsoleting CSS editors anyways.",1258226429.0
53,941996,comment,941922.0,941922.0,0,0,3pt14159,,,"If someone made a <i>really</i> intuitive web app for this I would totally use it. Usability would be key though. Painless to enter data, easy tagging system, and easy wandering system to keep on top of everything.",1258226399.0
54,941995,comment,941906.0,941906.0,0,0,xsc,,,Notepad++/Filezilla for SFTP,1258226369.0
55,941994,comment,941868.0,941887.0,0,0,mahmud,,,I have a feeling curious_cat will come back with more questions.,1258226346.0
56,941993,comment,941906.0,941990.0,0,0,tptacek,,,There are decent reasons for avoiding SFTP; regular FTP + VPN is more secure. Neither of them are as good as a trivial web app that will accept authenticated uploads and unpack them for you.,1258226316.0
57,941992,comment,941638.0,941803.0,0,0,patio11,,,"You are incorrect, they also have an API for data entry, which you can use to register arbitrary data from the server.  (Including, I suppose, browser versions or referring URLs since those are, after all, sent in with the HTTP requests.  I haven't actually implemented those since they aren't useful for my purposes.)<p>See here for how I use the API through Rails (sans Javascript):<p><a href=""http://www.bingocardcreator.com/articles/tracking-with-mixpanel.htm"" rel=""nofollow"">http://www.bingocardcreator.com/articles/tracking-with-mixpa...</a>",1258226282.0
58,941991,comment,941862.0,941862.0,0,0,jeremyw,,,"Some Google research comes to the same conclusion Leah does, with slightly different behavior.<p><a href=""http://sites.google.com/site/oauthgoog/UXFedLogin"" rel=""nofollow"">http://sites.google.com/site/oauthgoog/UXFedLogin</a>",1258226137.0
59,941990,comment,941906.0,941906.0,0,0,eli,,,expandrive for SFTP. People really still use regular FTP?,1258226112.0
60,941989,comment,941906.0,941906.0,0,0,vyrotek,,,Visual Studio and the Publish button,1258226032.0
61,941988,comment,941740.0,941883.0,0,0,mahmud,,,"That's a logical fallacy. Something can be both great and unknown to you. Usually, you seek information about things you know you need/want, and can afford. If a topic does not interest you, you will forever remain oblivious to it, except maybe for some tangential news about it that reach you by accident.<p>It's naive to think that just because you're a programmer you know everything there is to know about the software industry. You don't. You know about a small fraction of the <i>mainstream</i> development <i>tools</i>, and even those, at a superficial level. For example, can you name the top software products for running local elections? how about automating a chemistry research lab? packages for oil exploration? vacation property management? real-time spoken Chinese processing? computational archeology? artist talent management? threat modeling for distributed corporate networks?<p>See? :-)<p>""Social"" programmers, the guys you see in chat rooms and ""community"" websites are all mostly generalists, and typically work in well defined roles as grunt programmers. Nothing fancy, website here, a database there, a GUI or two, click, generate, zip, distribute, and call it a day type work. Don't let this closed echo-system define your perception of ""the software industry"".",1258226020.0
62,941987,comment,941740.0,941883.0,0,0,briancooley,,,"Well, there's the stuff from ITA Software that powers Orbitz. Flightcaster is using Clojure. Impact Solutions in Houston uses Lisp for real time analysis of oil rig data.<p>There're a lot more.",1258225990.0
63,941986,comment,941862.0,941862.0,0,0,patio11,,,"Even if you're not going to go the full monty and change the user-visible interaction, you can file off some of the sharp edges.  For example, I have the traditional sign in and register forms, and (predictably, given that my customers are not too tech savvy and the forms look similar if you read none of the words on them which, after all, is the default behavior on the Internet) many people use the wrong one.<p>Since user intent is clear if they try to register a user name and password that are already in your database, rather than giving them a ""that account already exists"" error I just log them in straight away.",1258225987.0
64,941985,comment,941507.0,941533.0,0,0,mjs,,,"I think the name was meaningful in this case, and that this is true in most cases.<p>I'm not especially interested in a random person's thoughts on Go.  I may be interested in their thoughts on Go if their post happens to make it to the top of YC: this probably indicates that they have something interesting to say.  And I'm also interested in their thoughts on Go if they're someone who is a recognised as an authority in the field, as is the case with Bram Cohen.  Or: I might be interested if they have a history of writing good posts.<p>So names in titles do usually convey useful information for me.  (Even if I don't recognise it, the fact that the submitter used a name is informative.)",1258225943.0
65,941984,comment,941772.0,941948.0,0,0,pieter,,,"The title of this post was edited after I posted, it was something like ""Spain gets 53% of its energy from wind"" first.",1258225905.0
66,941983,comment,941906.0,941906.0,0,0,akamaka,,,"When I'm working on Windows, SmartFTP is my favorite FTP client.  Along with UltraEdit, it's one of the few commercial utilities that were worth paying for.<p>You'd think that the free FTP utilities would be good enough, but SmartFTP has so much polish and so many small enhancements (especially when it comes to handling multiple connections, auto-resume, remote file editing, transfer queuing) that it blows everything else away.<p>That being said, I'm still on version 2.0, while the current release is 4.0.  I can't comment on how much better or worse it's gotten.",1258225866.0
67,941982,comment,941772.0,941781.0,0,0,dbz,,,"I don't see how it is deceptive. It's stated quite plainly that it is a record, and not a normal occurrence. (None of this is spoken in a harsh, rude, or sarcastic tone.) How would you say it differently? (Real question.)",1258225796.0
68,941981,comment,941807.0,941807.0,0,0,jamesbressi,,,"During sign up, please change ""accept TOS"" to something like ""accept terms""... the lay person may not understand what TOS is... just a suggestion.",1258225784.0
69,941980,comment,941906.0,941906.0,0,0,aarongough,,,"+1 for Dreamweaver being awful. I have to use it so that the content editors at my workplace can use it too, but that doesn't stop me from wondering how on earth so many obvious bugs make it into the release version of Dreamweaver...<p>Adobe, if you're listening at all, start again from scratch. Make something actually good!",1258225742.0
70,941979,comment,941699.0,941721.0,0,0,rudyfink,,,"I disagree.  I would argue that the MMO industry (World of Warcraft, et al.)  essentially makes its living selling scare virtual goods.  The game is a marketing adventure for the scare virtual goods.  Customers are elated when they manage to get an artificially scarce good and happily pay for the chance to obtain them.",1258225565.0
71,941978,comment,941843.0,941880.0,0,0,kunley,,,"If Go people succeeded with taking over some C area, that would be the direction right enough, don't you think? Simply because Go seems a bit better than C.<p>I'd love to see some modern SML or Haskell taking over the area of code compiled to binary, plus a constant growth of dynamic languages as well, because they are also cool. But that big revolution may not happen.",1258225441.0
72,941977,comment,941807.0,941972.0,0,0,slance,,,If an individual answer costs less than 50p - I lose money as the transaction costs are too high...,1258225436.0
73,941976,comment,940382.0,940382.0,0,0,NateLawson,,,"I'll identify one problem that the Internet ca. 1997 did not have: excessive discussion site mobility. If I wanted security information, I subscribed to one mailing list, Bugtraq. (Ok, I toyed with Firewalls@GreatCircle and a few others, but they were a waste of time). I read comp.security.unix and sci.crypt. These never migrated. I never had to unsubscribe from Bugtraq and move to ""new cybersecurity"" or any other crap.<p>Contrast that to post-1997. You had a brief blip of SecurityFocus around 1999, and in 2003 it began fragmenting into a myriad of blogs. For tech news, we saw the migration of slashdot/digg/reddit/HN. Each time they grew, lost focus, and people with words worth reading moved on.<p>Bugtraq is around today but I do not read it. Take each minor bug report and multiply it by X-dozen vendor echo bulletins and it becomes unbearable. HN is on the verge of falling into the political trap of digg.<p>Meanwhile, random blogs pop up, have some useful posts for < 1 year and then die off or evolve into navel-gazing and I unsubscribe. An RSS reader is useless to find new blogs. I'll sit out twitter until it turns into a ghost town in a few years, thanks.<p>The BBS was great for locality. You knew most people on it because it was extremely local. Earlier Usenet was the same, just organized by topic instead of location. I contend that the web replacement for these has not yet arrived.<p>Craigslist or random PHPBB message boards may be somewhat local, but the former is too broad for real discussion and the latter tends to be too narrow (say, a neighborhood association focused on pets).<p>Topical discussion is very fragmented and migrates between sites too often. I don't think it's an advance to have to keep changing sites or access methods (NNTP, Web, RSS) without any real change in functionality. It's change due to novelty or running from spammers or dumb commenters.<p>We need less change, not more. This is something that was better in 1997.",1258225380.0
74,941975,comment,941350.0,941926.0,0,0,joe_the_user,,,"Perhaps because lua is obscure and aims to be innovative?  I.E, pretty similar to Go.",1258225358.0
75,941974,story,,,2,1,jonsteinberg,Facebook is the new Google,http://vcmike.wordpress.com/2009/11/14/facebook-is-the-new-google/,,1258225343.0
76,941973,comment,941906.0,941906.0,0,0,aw3c2,,,jedit,1258225320.0
