,ID,Type,Story,Parent,Points,Comments,Author,Title,URL,Content,Created
0,284811,comment,284657.0,284766.0,0,0,SwellJoe,,,What phone do you have that has a TV out?,1219525176
1,284810,comment,284565.0,284770.0,0,0,froo,,,"So my current understanding of magnetic fields is pretty much limited to high school, but would it be possible to align this magnetic field with the Earth's magnetic field?<p>I'm just throwing it out there for consideration.",1219525121
2,284809,comment,283490.0,284333.0,0,0,mattmaroon,,,"Sorry, I didn't really mean you specifically, was just generalizing. Wireless power seems like it might be the next world-changing invention.",1219524915
3,284808,comment,283983.0,284751.0,0,0,mattmaroon,,,"I don't think it's bad to read self-help books at all. It's just bad to take blanket generalizations as gospel.<p>His advice, in particular, that you should never give up equity seems the sort that he succeeded in spite of.",1219524831
4,284806,comment,284618.0,284737.0,0,0,invisible,,,"I'm not against open sourcing code, or giving away helpful small things, but at the moment anyone can copy every bit of useful functionality of a JS application and just create their own back-end.  That is a very ridiculous concept, and there isn't much that can be done about it if that person isn't within the same country.",1219524471
5,284804,comment,283067.0,283443.0,0,0,dcurtis,,,"It's not a requirement. But they strongly suggest the typical 4 year vesting with 1 year cliff. (Actually, ""strongly"" might be an understatement.)",1219524243
6,284803,comment,284618.0,284740.0,0,0,MaysonL,,,"Michael Franz, the PI for the work at UCI, has been working on this stuff for almost 20 years. See his 1994 PHD thesis: <i>Code-Generation On-the-Fly</i> ftp://ftp.inf.ethz.ch/pub/publications/diss/th10497.ps [postscript]. Reading it was one of my ""Holy Shit!"" moments.",1219523981
7,284802,comment,284652.0,284652.0,0,0,DarkShikari,,,"Yet a predictable system doesn't always lead to expected output.<p>I once heard a story about a student, probably graduate, who wrote a very complex genetic algorithm, complete with a physics engine, to build (out of blocks representing legs, arms, etc) a creature that could best walk to a finish line.<p>But what it actually did, after months of work and weeks of running, is stack all the blocks on top of each other and have the creature fall over the finish line, because it only measured how fast the creature reached the finish line, not whether the entire creature crossed it.<p>And don't tell me that isn't a creative (albeit rules-lawyering) solution to the problem.",1219523867
8,284801,comment,284460.0,284560.0,0,0,SwellJoe,,,"<i>Am I the only one who considers Perl6 dead and irrelevant?</i><p>No, lots of people have expressed that opinion.  But, the reality is that Perl (5) is still more popular than Ruby and Python (probably combined).  I suspect that if anything really derails Perl, it won't be Ruby or Python.<p>It also certainly won't be Java or D, which are going after systems-level development tasks, and, in the case of Java, accidentally ended up being somewhat popular for poorly fitting tasks, like web apps.  Perl and Java, actually, pretty much came along at the same time, and both have coexisted mostly peacefully at two ends of a spectrum for many years (and now, over at the Perl end, though maybe not quite as far down the road, Ruby and Python also coexist mostly peacefully).<p>I suspect that if anything derails the popularity of Perl it'll be that JavaScript will have a good server-side implementation before Perl 6 becomes a solid reality, and it'll also derail Python and Ruby from ever reaching a level of true pervasiveness (on the order of PHP, which will <i>also</i> lose out significant market share).  And, of course, this theory only applies to web apps, where the current server/client dichotomy is less comfortable than it should be, that this will make any sense at all, and it doesn't mean any language will stop being used for web apps, at all.  Millions of lines of code don't stop existing overnight.  I just think that when the choice is between ""use one pretty good language on the client and server"" or ""use my favorite language on the server and a pretty good language on the client and try to make it all fit together seamlessly"" and apps become more and more rich on the client-side, it'll end up being obvious to choose the single language option.<p>Of course, a lot of software is not a web app, and so there will remain systems-level languages, and dynamic languages for various types of text processing and other such things, and Perl and Python and Ruby will be among them.  But, if a good implementation and good libraries show up for JavaScript on the server, it will have a huge impact on all current web application languages popularity.<p>Another interesting game changer is dynamic languages on the JVM and CLR (and, probably, Parrot).  I suspect that will also have a dramatic impact--but it won't lead to the death of any language.  It'll make more languages flourish, as it removes the requirement that a language have a reasonable standard library before it can gain any traction--the library will be ""anything else that runs on that same VM"".<p><i>is irrelevant as all the kids will be using Python, Java, Ruby, maybe D</i><p>The kids are already using Python and Ruby.  It doesn't mean kids aren't also using Perl.  And, of course Perl 5 hasn't been sitting still...5.10 has some nice new bits and pieces pulled back from Perl 6.<p><i>Legacy applications won't switch from Perl5.</i><p>They won't have to.  Like all Perl versions for the past 10 years, or so, Perl 6 is backward compatible.  It's possible to ""port"" a Perl 5 app to Perl 6 instantly, and then begin making use of Perl 6 features as appropriate.  Of course, you won't get the benefits of Perl 6 in sections of your code that are Perl 5, but they can be ported as time allows and as refactors happen naturally.",1219523820
9,284800,story,,,2,5,lisp_newb,ASK YC: DIY C Corporation,,"Hey all,<p><pre><code>  I've read that it's good to become a Deleware C Corporation to have the company as a separate entity; I've already read that online Deleware C corporation forms for $200.00 sucks. I'm currently a student in California. What's the optimal way for me to become a Deleware C Corporation?\n</code></pre>\nThanks.",1219523798
10,284799,story,,,2,0,markbao,Amazon Confirms Student Version Of Kindle,http://www.techcrunch.com/2008/08/23/amazon-confirms-student-version-of-kindle/,,1219523325
11,284798,comment,155400.0,155400.0,0,0,seanohagan,,,"In ""The Scientists"" by John Gribbin, Newton is painted as a 1st-class a-hole: taking credit for another's work; sitting on results until an opponent passed away; and others. (It's a good read; I recommend it.)",1219522619
12,284797,comment,284707.0,284707.0,0,0,watmough,,,"They missed the mac IIfx, my favorite mac of all time.<p>I had one of these on my desk, and an Elonex 286 clone with Windows 3.0.<p>There was just no comparison between the systems. Sadly the IIfx was just too expensive.",1219522495
13,284796,comment,284503.0,284763.0,0,0,aggieben,,,"I agree.  His understanding of how you might apply these patterns in C++ seems substandard, at best.  Doesn't he know about std::<container_type>::iterator?  He didn't even seem to know about templates at all.<p>But that's just the technical stuff that he rapidly dismissed in his update/addendum.  Fine.  I still think he doesn't get it.  I think he's right that patterns are largely about vocabulary, but he's wrong to say that the GoF book (or patterns in general) turn people into macro processor systems.  I have yet to read the GoF book, but my basic understanding of patterns is that it indeed creates vocabulary - which gives you abstractions with which to glue your thoughts together so you can have new thoughts.  That's what vocabulary does.  That's exactly how I think of design patterns in software.",1219522389
14,284795,comment,283983.0,284793.0,0,0,maxklein,,,"You can do the same exact thing, but with software. I just decided to use a real world example to demonstrate how one can do it when one has little to no skill. Using software it's WAY easier, but it's the EXACT same principle.",1219522296
